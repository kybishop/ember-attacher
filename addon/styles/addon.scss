@import 'mixins';

$positions: 'top', 'bottom', 'left', 'right';
$origins: bottom, top, right, left;

.ember-attacher-popper {
  min-height: 10px;

  > .inner {
    max-width: 400px;
    perspective: 800px;
    z-index: 9999;
  }

  @each $position in $positions {
    &[x-placement=#{$position}] > .inner {
      > div[x-arrow] {
        @include arrow($position, 10px);
      }

      $circle-origins: 0% 50%, 0% -50%, 50% 5%, -50% 5%;

      > div[x-circle] {
        opacity: 0;
        transform-origin: nth($circle-origins, index($positions, $position));
        @include circle-transform-hide($position);
      }

      &.ember-attacher-fill {
        opacity: 0;
        @include ember-attacher-hide-transform($position, 'shift')
      }

      &.ember-attacher-none {
        opacity: 1;
        @include ember-attacher-hide-transform($position, 'none');
      }

      &.ember-attacher-fade {
        opacity: 0;
        @include ember-attacher-show-transform($position, 'fade')
      }

      &.ember-attacher-shift {
        opacity: 0;
        @include ember-attacher-hide-transform($position, 'shift')
      }

      &.ember-attacher-scale {
        opacity: 0;
        @include ember-attacher-hide-transform($position, 'scale')
      }

      &.ember-attacher-perspective {
        transform-origin: nth($origins, index($positions, $position));

        opacity: 0;
        @include ember-attacher-hide-transform($position, 'perspective');
      }

      &.ember-attacher-show {
        > div[x-circle] {
          opacity: 1;
          transform: scale(1.2) translate(-50%, -50%);
        }

        &.ember-attacher-fade,
        &.ember-attacher-fill,
        &.ember-attacher-none,
        &.ember-attacher-shift {
          opacity: 1;
          @include ember-attacher-show-transform($position, 'fade')
        }

        &.ember-attacher-scale {
          opacity: 1;
          @include ember-attacher-show-transform($position, 'scale')
        }

        &.ember-attacher-perspective {
          opacity: 1;
          @include ember-attacher-show-transform($position, 'perspective');
        }
      }
    }
  }
}

.ember-attacher-tooltip > .inner {
  position: relative;
  color: white;
  border-radius: 4px;
  padding: 0.5rem 1rem;
  text-align: center;
  will-change: transform;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #333;

  &.ember-attacher-fill {
    overflow: hidden;
    background-color: transparent;
  }

  > div[x-arrow] {
    z-index: -1;
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: #333;
    border: 1px solid;
    border-color: transparent transparent #333 #333;
  }

  > div[x-circle] {
    position: absolute;
    will-change: transform;
    background-color: #333;
    border-radius: 50%;
    width: 120%;
    width: calc(100% + 2rem);
    left: 50%;
    transition: all ease-out;
    z-index: -1;
    opacity: 0;
    overflow: hidden;

    &::before {
      content: '';
      padding-top: 100%;
      padding-top: calc(75% + 2rem);
      float: left;
    }
  }
}

.ember-attacher-light-theme > .inner {
  color: #203d5d;
  box-shadow: 0 0 16px -4px rgba(0,20,40,0.2), 0 0 80px -10px rgba(0,20,40,0.3);
  background-color: #f3f6f9;
  border: 1px solid #ced2e2;

  > div[x-arrow] {
    background-color: #f3f6f9;
    border-color: transparent transparent #ced2e2 #ced2e2;
  }

  > div[x-circle] {
    background-color: #f3f6f9;
  }
}

@media (max-width: 500px) {
  .ember-attacher-tooltip > .inner, .ember-attacher-popover > .inner {
    max-width: 94%;
    max-width: calc(100% - (2rem + 4px));
  }
}
