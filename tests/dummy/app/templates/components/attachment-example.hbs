<centered class="section">
  <p>Drop an \{{#ember-attacher}} in any element or component to get started.</p>
</centered>
<centered class="section">
  <centered xs="12" lm="10" sm="8" md="6" lg="5" justify="around" class="popper-area">
    <button class="hover-me">
      Tooltip me, captain!
      {{#ember-attacher animation=tooltipData.animation
                        arrow=tooltipData.arrow
                        class="ember-attacher-popper ember-attacher-tooltip"
                        hideDelay=tooltipData.hideDelay
                        hideDuration=tooltipData.hideDuration
                        hideOn=tooltipData.hideOn
                        interactive=tooltipData.interactive
                        isShown=tooltipData.isShown
                        onChange=(action (mut tooltipData.isShown))
                        placement=tooltipData.placement
                        renderInPlace=tooltipData.renderInPlace
                        showDelay=tooltipData.showDelay
                        showDuration=tooltipData.showDuration
                        showOn=tooltipData.showOn}}
        Hello world!
      {{/ember-attacher}}
    </button>

    <button class="hover-me target-plz">
      Click me, captain!
    </button>

    {{#ember-attacher animation=popoverData.animation
                      arrow=popoverData.arrow
                      class="ember-attacher-popper custom-popover-css"
                      hideDelay=popoverData.hideDelay
                      hideDuration=popoverData.hideDuration
                      hideOn=popoverData.hideOn
                      interactive=popoverData.interactive
                      isShown=popoverData.isShown
                      onChange=(action (mut popoverData.isShown))
                      placement=popoverData.placement
                      renderInPlace=popoverData.renderInPlace
                      showDelay=popoverData.showDelay
                      showDuration=popoverData.showDuration
                      showOn=popoverData.showOn
                      target=popoverData.target as |emberAttacher|}}
      <p>Popovers and tooltips, oh my!</p>

      <button {{action emberAttacher.hide}}>Close</button>
    {{/ember-attacher}}
  </centered>
</centered>
{{#if (and service.arrow (eq service.animation "fill"))}}
  <centered class="section">
    <h2>Warning: `animation: "fill"` is not compatible with `arrow: true`</h2>
  </centered>
{{/if}}

{{#if service.renderInPlace}}
  <centered class="section" vertical fit>
    <h3>Note: renderInPlace can cause z-index issues.</h3>
    <h3>Hover over the renderInPlace attr for more details.</h3>
  </centered>
{{/if}}
<centered class="edit-section">
  <vbox lm="fit">
    <hbox class="nav-bar">
      <centered fit class="nav{{if isConfiguringTooltip ' active'}}" {{action 'setIsConfiguringTooltip' true}}>
        Tooltip in a parent
      </centered>
      <centered fit class="nav{{unless isConfiguringTooltip ' active'}}" {{action 'setIsConfiguringTooltip' false}}>
        Popover with a target
      </centered>
    </hbox>

  <vbox class="edit-me">
    <hbox><centered fit>&lt;button class="hover-me"></centered></hbox>
    <hbox><centered fit>&nbsp;&nbsp;{{if isConfiguringTooltip 'Tooltip me, captain!' 'Click me, captain!'}}</centered></hbox>
    <box lm="horizontal" fit>
      <hbox fit class="no-wrap">
        <centered fit>
          &nbsp;&nbsp;\{{
          <span class="underlined">
            #ember-attacher
              {{#ember-attacher class="ember-attacher-popper ember-attacher-tooltip"}}
                {{#if isConfiguringTooltip}}
                  The "Tooltip in a parent" ember-attacher is initially set to the default settings.
                  Twiddle some knobs to see what ember-attacher can do!
                {{else}}
                  The "Popover with a target" ember-attacher is triggered by clicking, and has
                  a custom hide action.
                {{/if}}
              {{/ember-attacher}}
          </span>
          &nbsp;
        </centered>
      </hbox>
      <hbox fit>
        <box xs="fit" lm="hidden">&nbsp;&nbsp;&nbsp;&nbsp;</box>
        <centered fit>
          animation="{{#power-select onchange=(action (mut service.animation))
                                     options=animationOptions
                                     searchEnabled=false
                                     selected=service.animation
                                     triggerClass="button large"
                                     as |animationOption|}}
                                       {{animationOption}}
                                     {{/power-select}}"
        </centered>
      </hbox>
    </box>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        arrow=<button class="button medium" {{action "toggleArrow"}}>{{service.arrow}}</button>
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        hideDelay={{input class="button medium"
                          min="0"
                          pattern="[0-9]"
                          placeholder="0"
                          step="100"
                          type="number"
                          value=service.hideDelay}}
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        <span class="underlined">
          hideOn

          {{#ember-attacher class="ember-attacher-popper ember-attacher-tooltip"}}
            Any combination of "blur", "click", "clickout", and "mouseleave".
            "clickout" is a custom event that will hide the attachment when the user clicks
            outside the target. When interactive=true, clicking the attachment will not trigger
            a hide event
          {{/ember-attacher}}
        </span>
        ="{{#power-select onchange=(action (mut service.hideOn))
                          options=hideOnOptions
                          searchEnabled=false
                          selected=service.hideOn
                          triggerClass="button xlarge"
                          as |hideOnOption|}}
                            {{hideOnOption}}
                          {{/power-select}}"
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        <span class="underlined">
          hideDuration

          {{#ember-attacher class="ember-attacher-popper ember-attacher-tooltip"}}
            How long the hide animation will take.
          {{/ember-attacher}}
        </span>
        ={{input class="button medium"
                 min="0"
                 pattern="[0-9]"
                 placeholder="0"
                 step="100"
                 type="number"
                 value=service.hideDuration}}
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        <span class="underlined">
          interactive

          {{#ember-attacher class="ember-attacher-popper ember-attacher-tooltip"}}
            Interactive tooltips will not close when clicked or hovered over.
          {{/ember-attacher}}
        </span>
        =
        <button class="button medium" {{action "toggleInteractive"}}>
          {{service.interactive}}
        </button>
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        <span class="underlined">
          isShown

          {{#ember-attacher class="ember-attacher-popper ember-attacher-tooltip"}}
            Manually controls whether or not the attacher should be open or closed.
          {{/ember-attacher}}
        </span>
        =
        <button class="button medium" {{action "toggleIsShown"}}>{{service.isShown}}</button>
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        <span class="underlined">
          onChange

          {{#ember-attacher class="ember-attacher-popper ember-attacher-tooltip"}}
            An action to be fired when the attachment's visibility changes.
          {{/ember-attacher}}
        </span>
        =(action (mut service.isShown))
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        placement="{{#power-select onchange=(action (mut service.placement))
                                   options=placementOptions
                                   searchEnabled=false
                                   selected=service.placement
                                   triggerClass="button medium"
                                   as |placementOption|}}
                                     {{placementOption}}
                                   {{/power-select}}"
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        <span class="underlined">
          renderInPlace

          {{#ember-attacher animation="shift" class="ember-attacher-popper ember-attacher-tooltip"}}
            Elements that exist deep within the document tree are given an implicitly lower z-index
            value than elements that aren't as deep in the tree; this has the effect of hiding our
            popper behind less-nested elements. Due to the way z-indexing works, we cannot simply
            add a higher z-index value to our popper. To avoid this issue, we render the element
            on the document body, giving it the highest default z-index value. Toggling
            renderInPlace will prevent the popper from being rendered elsewhere, but may cause the
            aforementioned z-index issues.
          {{/ember-attacher}}
        </span>
        =
        <button class="button medium" {{action "toggleRenderInPlace"}}>
          {{service.renderInPlace}}
        </button>
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        showDelay={{input class="button medium"
                          min="0"
                          pattern="[0-9]"
                          placeholder="0"
                          step="100"
                          type="number"
                          value=service.showDelay}}
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        <span class="underlined">
          showDuration

          {{#ember-attacher class="ember-attacher-popper ember-attacher-tooltip"}}
            How long the show animation will take.
          {{/ember-attacher}}
        </span>
        ={{input class="button medium"
                 min="0"
                 pattern="[0-9]"
                 placeholder="0"
                 step="100"
                 type="number"
                 value=service.showDuration}}
      </centered>
    </hbox>
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        <span class="underlined">
          showOn

          {{#ember-attacher class="ember-attacher-popper ember-attacher-tooltip"}}
            For performance reasons, we recommend using some combination of "mouseenter", "focus",
            and "click", though you can use any event listener you want.
          {{/ember-attacher}}
        </span>
        ="{{#power-select onchange=(action (mut service.showOn))
                          options=showOnOptions
                          searchEnabled=false
                          selected=service.showOn
                          triggerClass="button xlarge"
                          as |showOnOption|}}
                            {{showOnOption}}
                          {{/power-select}}"
      </centered>
    </hbox>
    {{#unless isConfiguringTooltip}}
      <hbox>
        &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
        <centered fit>
          target=".target-plz"
        </centered>
      </hbox>
    {{/unless}}
    <hbox>
      &nbsp;&nbsp;&nbsp;&nbsp;<box xs="hidden" lm="visible fit">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</box>
      <centered fit>
        <vbox>
          {{#if isConfiguringTooltip}}
            <hbox><centered fit>class=</centered></hbox>
            <hbox><centered fit>&nbsp;&nbsp;"ember-attacher-popper</centered></hbox>
            <hbox><centered fit>&nbsp;&nbsp;&nbsp;ember-attacher-tooltip"}}</centered></hbox>
          {{else}}
            <hbox><centered fit>class=</centered></hbox>
            <hbox><centered fit>&nbsp;&nbsp;"ember-attacher-popper</centered></hbox>
            <hbox><centered fit>
              &nbsp;&nbsp;&nbsp;<a href="https://github.com/kybishop/ember-attacher/blob/master/tests/dummy/app/styles/app.scss#L120"
                                         target="_blank"
                                         rel="noopener">custom-popover-css</a>"
            </centered></hbox>
            <hbox><centered fit>as |emberAttacher|}}</centered></hbox>
          {{/if}}
        </vbox>
      </centered>
    </hbox>
    {{#if isConfiguringTooltip}}
      <hbox>&nbsp;&nbsp;&nbsp;&nbsp;Hello world!</hbox>
    {{else}}
      <vbox>
        <hbox>
          &nbsp;&nbsp;&nbsp;&nbsp;<centered fit>&lt;p>Popovers and tooltips, oh my!&lt;/p></centered>
        </hbox>
        <hbox>
          &nbsp;&nbsp;&nbsp;&nbsp;
          <centered fit>
            &lt;button \{{action emberAttacher.hide}}>
          </centered>
        </hbox>
        <hbox>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          <centered fit>
            Close
          </centered>
        </hbox>
        <hbox>
          &nbsp;&nbsp;&nbsp;&nbsp;
          <centered fit>
            &lt;\button>
          </centered>
        </hbox>
      </vbox>
    {{/if}}
    <hbox>
      &nbsp;&nbsp;\{{/ember-attacher}}
    </hbox>
    <hbox>
      <centered fit>&lt;\button></centered>
    </hbox>
  </vbox>
  </vbox>
</centered>
<vbox align="center" class="section">
  <h2>Credits</h2>
  <vbox fit xs="12" lm="10" sm="8" md="6">
    <p>Ember-attacher was inspired by tippy.js and ember-tooltips.</p>
    <p>It was built with love to provide a tooltip and popover addon based on popper.js, a modern replacement to tether.js, while taking advantage of everything Ember.js has to offer.</p>
  </vbox>
</vbox>
